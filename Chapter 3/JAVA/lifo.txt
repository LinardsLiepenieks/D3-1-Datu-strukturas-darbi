package lifo.java;

import java.util.Stack;

public class LifoJava {

    static void pushStack(Stack<Integer> stack) 
    { 
        for (int i = 0; i < 5; i++) { 
            stack.push(i); 
        } 
    } 
  
    static void popStack(Stack<Integer> stack) 
    { 
        System.out.print("Pop: "); 
  
        for (int i = 0; i < 5; i++) { 
            Integer y = (Integer)stack.pop(); 
            System.out.println(y); 
        } 
    } 
  
    static void peekStack(Stack<Integer> stack) 
    { 
        Integer element = (Integer)stack.peek(); 
        System.out.println("Stack's top element: " + element); 
    } 
  
    static void searchStack(Stack<Integer> stack, int element) 
    { 
        Integer pos = (Integer)stack.search(element); 
  
        if (pos == -1) 
            System.out.println("Element not found"); 
        else
            System.out.println("Element is at position: " + pos); 
    } 
    
    public static void main(String[] args) {
        Stack<Integer> stack = new Stack<Integer>(); 
  
        pushStack(stack); 
        popStack(stack); 
        pushStack(stack); 
        peekStack(stack); 
        searchStack(stack, 2); 
        searchStack(stack, 6); 
    }
    
}
